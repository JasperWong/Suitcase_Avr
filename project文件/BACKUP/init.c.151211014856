#include <iom128v.h>
void ICP_1_init(void)
{
	TCCR1B |= (1<< ICNC1 );			//输入捕捉噪声抑制器
	TCCR1B &= ~(1 << ICES1);		//下降沿触发
	//TCCR1B  |= (1 << CS10) | (1<<CS11);			//64分频
	TCCR1B  |= (1 << CS12);			//256分频
	//TCNT1 = 0;
	/////////TCNT1 = 34285;					//片内8M 1s
	TCNT1 = 64285;					//片内8M 40ms
	//TCNT1 = 62410;					//片内8M 100ms
	//TCNT1 = 49911;					//片内1M 1s
	//TCNT1 = 15625;					//片内1M 1s
	
	TIMSK |= (1 << TICIE1);			//捕捉中断有效					
	TIMSK &= ~(1 << TOIE1);			//溢出中断关闭					

	TIFR |= (1 << ICF1);			//捕捉中断标志清除				
	
	/*IO设置*/
	PORTD &= ~(1<<PD4);
	DDRD &= ~(1<<PD4);
	 
}

void ICP_3_init(void)
{
	TCCR3B |= (1<< ICNC3 );			//输入捕捉噪声抑制器
	TCCR3B &= ~(1 << ICES3);		//下降沿触发
	//TCCR1B  |= (1 << CS10) | (1<<CS11);			//64分频
	TCCR1B  |= (1 << CS32);			//256分频
	//TCNT1 = 0;
	/////////TCNT1 = 34285;					//片内8M 1s
	TCNT1 = 64285;					//片内8M 40ms
	//TCNT1 = 62410;					//片内8M 100ms
	//TCNT1 = 49911;					//片内1M 1s
	//TCNT1 = 15625;					//片内1M 1s
	
	ETIMSK |= (1 << TICIE3);			//捕捉中断有效					
	ETIMSK &= ~(1 << TOIE3);			//溢出中断关闭					

	ETIFR |= (1 << ICF3);			//捕捉中断标志清除				
	
	/*IO设置*/
	PORTE &= ~(1<<PE7);
	DDRE &= ~(1<<PE7);
	 
}

void uart1_init(unsigned int baud)
{
   UCSR1C=0x06;             //选择UCSRC，异步模式，禁止                        
                            //   校验，1位停止位，8位数据位
   baud=8000000/16/baud-1;  //波特率最大为65K
   UBRR1L=baud; 					     	  
   UBRR1H=baud>>8; 		    //设置波特率
   UCSR1B=(1<<TXEN0)|(1<<RXEN0)|(1<<RXCIE0); //接收、发送使能，接收中断使能
   DDRD|=(1<<3);	            //配置TX为输出（很重要）
}
void io_init()
{
  DDRA=0xff;
  DDRD=0xff;
}